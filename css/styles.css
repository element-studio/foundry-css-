@charset "UTF-8";
/**
 * _theme.scss
 * Contains variables for cosmetic look-and-feel attributes such as colour and font declarations.
 * All variables are prefixed by type for organisation, and for easier identification when looking back through code later.
 *
 * 1. Document Setup
 * 2. Typography
 * 3. Colours
 * 4. Common Border Radii
 * 5. Layers
 *
 */
/*
 * 1. Document Setup
 * 
 * Set the base font-size and line-height for the project, as well as establish a value for 
 * rhythm and spacing.
 */
/*
 * 2. Typography
 * 
 * Set font declarations, font-sizes and font-weights. 
 *
 */
/*
 * 3. Colours
 * 
 * Colours are stored in pairs in a SASS map - each pair contains a theme colour, as well
 * as a corresponding colour for use in text to ensure proper contrast.
 * 
 * Gradients are stored in a seperate SASS map as they need to be accessed differently. 
 *
 */
/*
 * 4. Common Border Radii
 * 
 * Set any commonly used border-radius declarations. 
 *
 */
/*
 * 5. Layers
 * 
 * We store all z-index values in a SASS map under human-readable keys to avoid the usual 
 * trial and error or 'z-index:9999' nonsense.
 *
 */
/*
 * 6. Paths
 *
 * Commonly used paths for locating image assets, font files, etc.
 * 
 */
/* --------------------------------
 *
 * Foundry CSS
 *
 * Based heavily on BEM principles, along with a smattering of inuitCSS / itCSS, Foundry CSS is Element Studio's
 * own CSS boilerplate for getting new user interfaces styled up quickly while keeping them looking swag, by
 * abstracting out the styling of commonly used patterns components.
 *
 * --------------------------------
 */
/*
 * 0. Configuration
 * Nearly everything within Foundry relies on two configuration files, we'll grab those first.
 */
/**
 * _theme.scss
 * Contains variables for cosmetic look-and-feel attributes such as colour and font declarations.
 * All variables are prefixed by type for organisation, and for easier identification when looking back through code later.
 *
 * 1. Document Setup
 * 2. Typography
 * 3. Colours
 * 4. Common Border Radii
 * 5. Layers
 * 6. Responsive breakpoints
 *
 */
/*
 * 1. Document Setup
 * 
 * Set the base font-size and line-height for the project, as well as establish a value for 
 * rhythm and spacing.
 */
/*
 * 2. Typography
 * 
 * Set font declarations, font-sizes and font-weights. 
 *
 */
/*
 * 3. Colours
 * 
 * Colours are stored in pairs in a SASS map - each pair contains a theme colour, as well
 * as a corresponding colour for use in text to ensure proper contrast.
 * 
 * Gradients are stored in a seperate SASS map as they need to be accessed differently. 
 *
 */
/*
 * 4. Common Border Radii
 * 
 * Set any commonly used border-radius declarations. 
 *
 */
/*
 * 5. Layers
 * 
 * We store all z-index values in a SASS map under human-readable keys to avoid the usual 
 * trial and error or 'z-index:9999' nonsense.
 *
 */
/**
 * 6. Breakpoints
 *
 * Foundry works mobile-first, so the majority of our media queries are based on min-width;
 * These breakpoints represent the lower bound of a media query or grid layout
 * Accessed via eg. `map-get($breakpoints, 'large')`
 */
/*
 * 7. Paths
 *
 * Commonly used paths for locating image assets, font files, etc.
 * 
 */
/*
 * 1. Base
 * The 'engine' of Foundry. Base is a collection of settings, mixins, functions, and resets, which acts as a
 * dependency for the rest of the framework.
 */
/*
 * Color
 * The color function gives us a less verbose way of grabbing our color variables form our $color sass-map.
 */
/*
 * Fontsize
 * The fontsize function gives us a less verbose way of grabbing our font-size variables form our $font-sizes sass-map.
 */
/*
 * Fontweight
 * The fontweight function gives us a less verbose way of grabbing our font-weight variables form our $font-weights sass-map.
 */
/*
 * Lower Bound
 * Select the first item in a range 
 */
/*
 * Upper Bound
 * Select the last item in a range 
 */
/*
 * Rhythm
 * The rhythm function takes our $document-rhythm variable and multiplies by a number
 * passed as an optional parameter. 
 */
/*
 * Ellipsis
 *
 * Applies an overflow to a text element, and a visible ellipsis.
 * Credit to Bourbon (www.bourbon.io).
 */
/*
 * Gradient
 *
 * A handy mixin allowing us to shorthand CSS gradients.
 */
/*
 * Media Queries:
 * We use Foundation's method of setting up variables and mixins to control our breakpoints. Rather than use hard-coded breakpoints however,
 * we base our breakpoint ranges off of the $breakpoint variables declared in our _theme.scss
 *
 */
/*
 * Triangle
 *
 * Generates a CSS triangle with the required color and direction.
 * Credit to Bourbon (www.bourbon.io).
 */
/*
 * Generic:
 * Element selectors that form our little reset sheet.
 *
 */
* {
  box-sizing: border-box; }

html, body {
  width: 100%;
  min-height: 100%;
  scroll-behavior: smooth; }

body, p, fieldset, dialog {
  margin: 0; }

body {
  font-family: "museo-sans", Helvetica, Arial, sans-serif;
  font-size: 14px;
  line-height: 1.6;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  color: #4A4A4A;
  background-color: #FAFAFA; }

h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: 1.5rem; }

h1 {
  font-size: 4rem; }

h2 {
  font-size: 3rem; }

h3 {
  font-size: 2rem; }

h4 {
  font-size: 1.5rem; }

h5 {
  font-size: 1.25rem; }

h6 {
  font-size: 1rem; }

p + p {
  margin-top: 1rem; }

a {
  background-color: transparent;
  color: inherit; }
  a:active, a:hover {
    outline: 0; }

strong {
  font-weight: 700; }

input, button, select, option, textarea {
  font-size: 100%;
  font-family: inherit; }

fieldset, dialog {
  padding: 0;
  border: none; }

/* clears the 'X' from Internet Explorer */
input[type=search]::-ms-clear {
  display: none;
  width: 0;
  height: 0; }

input[type=search]::-ms-reveal {
  display: none;
  width: 0;
  height: 0; }

/* clears the 'X' from Chrome */
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
  display: none; }

/*
 * 2. Layout
 * Layout contains classes which have no aesthetic, but are purely concerned with helping to layout and 
 * structure a page layout. 
 */
/*
 * Breathe
 * A class to manage horizontal rhythm.
 */
.breathe > * + * {
  margin-left: 2rem; }

.breathe--small > * + * {
  margin-left: 0.5rem; }

.breathe--large > * + * {
  margin-left: 4rem; }

/*
 * Container:
 * Horizontally centers an element and constrains it to one of our $page-container widths 
 * from _theme.scss.
 */
/*
 * Container Config
 *
 * 1. Sizes
 *
 */
.container {
  margin-left: auto;
  margin-right: auto;
  padding-left: 2rem;
  padding-right: 2rem;
  max-width: 72rem; }

/* Sizes */
.container--xsmall {
  max-width: 30rem; }

.container--small {
  max-width: 60rem; }

.container--normal {
  max-width: 72rem; }

.container--medium {
  max-width: 84rem; }

.container--large {
  max-width: 90rem; }

/* Modifiers */
.container--flush {
  padding-left: 0;
  padding-right: 0; }

/*
 * Some layout classes, to quickly utilise the Flexible Box Model (Flexbox) to slay linear items out.
 */
.flex {
  display: flex; }

.flex--wrap {
  flex-wrap: wrap; }

.flex--row {
  flex-direction: row; }

.flex--column {
  flex-direction: column; }

.flex--grow {
  flex-grow: 1; }

.flex--space-between {
  justify-content: space-between; }

.flex--space-around {
  justify-content: space-around; }

.flex--justify-end {
  justify-content: flex-end; }

.flex--justify-start {
  justify-content: flex-start; }

.flex--justify-center {
  justify-content: center; }

.flex--align-end {
  align-items: flex-end; }

.flex--align-start {
  align-items: flex-start; }

.flex--align-center {
  align-items: center; }

.flex--paced-left > * {
  margin-left: 1rem; }
  .flex--paced-left > *:first-child {
    margin-left: 0; }

.flex--paced-right > * {
  margin-right: 1rem; }
  .flex--paced-right > *:last-child {
    margin-right: 0; }

/*
 * Flow
 * A class to manage vertical rhythm.
 */
.flow > * + * {
  margin-top: 2rem; }

.flow--small > * + * {
  margin-top: 1rem; }

.flow--large > * + * {
  margin-top: 4rem; }

/*
 * Grid
 * Configure number of required columns and gutter size here. If your grid requires breakpoints
 * which differ from the site-wide breakpoints above, uncomment and update the values in the
 * array below.
 */
/*
 * Wrappers:
 * Wrap an element in top and bottom padding.
 */
/*
 * Wrapper Config
 *
 * 1. Sizes
 *
 */
.wrapper {
  padding-top: 3rem;
  padding-bottom: 3rem; }

/* Sizes */
.wrapper--small {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem; }

.wrapper--normal {
  padding-top: 3rem;
  padding-bottom: 3rem; }

.wrapper--medium {
  padding-top: 4rem;
  padding-bottom: 4rem; }

.wrapper--large {
  padding-top: 6rem;
  padding-bottom: 6rem; }

/* Modifiers */
.wrapper--top-only {
  padding-bottom: 0; }

.wrapper--bottom-only {
  padding-top: 0; }

/*
 * 3. Typography
 * Honestly there's no prizes for guessing what this is. 
 */
.wysiwyg > * + * {
  margin-top: 2rem; }

/*
 * Typography Properties
 * Properties are small utility classes solely concerned with one aspect of typesetting at a time,
 * such as altering color or font-weight.
 */
.color--base {
  color: #4A4A4A; }

.color--canvas {
  color: #FAFAFA; }

.color--white {
  color: #FFFFFF; }

.color--alpha {
  color: #EA4D52; }

.color--beta {
  color: #638DB4; }

.color--gamma {
  color: #3E5168; }

.color--dark {
  color: #777777; }

.color--mid {
  color: #9B9B9B; }

.color--light {
  color: #D8D8D8; }

.color--shade {
  color: #DEDEDE; }

.color--success {
  color: #AAD091; }

.color--warning {
  color: #EFBC68; }

.color--error {
  color: #D17580; }

.color--info {
  color: #9CC9DF; }

.color--facebook {
  color: #3b5998; }

.color--twitter {
  color: #1da1f2; }

.color--linkedin {
  color: #0077b5; }

.font-size--smallest {
  font-size: 0.6rem; }

.font-size--small {
  font-size: 0.8rem; }

.font-size--standard {
  font-size: 1rem; }

.font-size--medium {
  font-size: 1.1rem; }

.font-size--large {
  font-size: 1.5rem; }

.font-size--largest {
  font-size: 3rem; }

.font-weight--light {
  font-weight: 100; }

.font-weight--normal {
  font-weight: 400; }

.font-weight--semibold {
  font-weight: 500; }

.font-weight--bold {
  font-weight: 700; }

/* Modifiers */
._has-subhead {
  margin-bottom: 0; }

.text--block {
  display: block; }

/*
 * 4. Blocks
 * Blocks are our small, single or dual element building blocks.
 */
/*
 * Avatar
 *
 * Ready-to-roll confiigurable shapes for user/profile images.
 */
/*
 * Avatar Config
 *
 * 1. Sizes
 * 2. Border Radius
 * 3. Shadows
 *
 */
.avatar {
  display: inline-block;
  width: 5rem;
  max-width: 100%;
  border-radius: 0.75rem; }

/* Sizes */
.avatar--small {
  width: 3rem; }

.avatar--normal {
  width: 5rem; }

.avatar--medium {
  width: 7.5rem; }

.avatar--large {
  width: 10rem; }

/*
 * Button:
 * A button is an inline-block element used to highlight actions in a UI. By default, a button will have a background-color
 * equal to the document $color-base, which will probably be dark, with white text.
 *
 */
/*
 * Button Config
 *
 * 1. Colors
 * 2. Border Radius
 * 3. Sizes
 * 4. Label Weight
 * 5. Label Leading
 *
 */
.button {
  display: inline-block;
  padding: 1rem 1.66rem;
  border-radius: 0.25rem;
  text-decoration: none;
  letter-spacing: 0.05em;
  font-weight: 700;
  cursor: pointer;
  text-align: center;
  border: 2px solid transparent; }

.button._is-busy {
  cursor: progress;
  color: transparent; }
  .button._is-busy .button__icon--busy {
    top: 50%; }

.button._is-disabled {
  cursor: not-allowed;
  filter: grayscale(100%); }

/* Colors */
.button--base {
  background-color: #4A4A4A;
  border-color: #4A4A4A;
  color: white; }

.button--canvas {
  background-color: #FAFAFA;
  border-color: #FAFAFA; }

.button--white {
  background-color: #FFFFFF;
  border-color: #FFFFFF; }

.button--alpha {
  background-color: #EA4D52;
  border-color: #EA4D52; }

.button--beta {
  background-color: #638DB4;
  border-color: #638DB4; }

.button--gamma {
  background-color: #3E5168;
  border-color: #3E5168;
  color: white; }

.button--dark {
  background-color: #777777;
  border-color: #777777;
  color: white; }

.button--mid {
  background-color: #9B9B9B;
  border-color: #9B9B9B; }

.button--light {
  background-color: #D8D8D8;
  border-color: #D8D8D8; }

.button--shade {
  background-color: #DEDEDE;
  border-color: #DEDEDE; }

.button--success {
  background-color: #AAD091;
  border-color: #AAD091; }

.button--warning {
  background-color: #EFBC68;
  border-color: #EFBC68; }

.button--error {
  background-color: #D17580;
  border-color: #D17580; }

.button--info {
  background-color: #9CC9DF;
  border-color: #9CC9DF; }

.button--facebook {
  background-color: #3b5998;
  border-color: #3b5998;
  color: white; }

.button--twitter {
  background-color: #1da1f2;
  border-color: #1da1f2; }

.button--linkedin {
  background-color: #0077b5;
  border-color: #0077b5;
  color: white; }

/* Sizes */
.button--small {
  padding: 0.66rem 1rem; }

.button--normal {
  padding: 1rem 1.66rem; }

.button--medium {
  padding: 1.25rem 2.25rem; }

.button--large {
  padding: 1.33rem 3.25rem; }

.button--fullwidth {
  display: block;
  width: 100%; }

.button--bordered {
  background-color: transparent; }

/*
 * Card:
 * A card is a container, usually used in a list or collection of objects, used to 
 * visually group and emphasise a group of elements. Can contain an image, stacked 
 * horizontally or vertically.
 */
/*
 * Card Config
 *
 * 1. Background Colors
 * 2. Padding
 * 3. Borders
 * 4. Shadow
 *
 */
.card {
  border-radius: 0.4rem;
  padding: 1.5rem;
  border: 1px solid #D8D8D8;
  box-shadow: 0 20px 30px 25px rgba(74, 74, 74, 0.125); }

.card--basic {
  padding: 0; }

.card__inner {
  padding: 1.5rem; }

/* Sizes */
.card--normal {
  padding: 1.5rem; }

.card__inner--normal {
  padding: 1.5rem; }

/*
 * Horizontal Rule:
 * Premade style for the classic <hr> element. Simple!
 */
/*
 * Horizontal Rule Config
 *
 * 1. Weights (Thickness)
 * 2. Widths
 * 3. Colours
 *
 */
.hr {
  border: none;
  margin: 2rem 0;
  height: 0.25rem;
  width: 12.5rem;
  background-color: #4A4A4A; }

/* Weights */
.hr--thin {
  height: 1px; }

.hr--normal {
  height: 0.25rem; }

.hr--thick {
  height: 0.66rem; }

/* Widths */
.hr--short {
  width: 7.5rem; }

.hr--normal {
  width: 12.5rem; }

.hr--fullwidth {
  width: 100%; }

/* Colors */
.hr--base {
  background-color: #4A4A4A; }

.hr--canvas {
  background-color: #FAFAFA; }

.hr--white {
  background-color: #FFFFFF; }

.hr--alpha {
  background-color: #EA4D52; }

.hr--beta {
  background-color: #638DB4; }

.hr--gamma {
  background-color: #3E5168; }

.hr--dark {
  background-color: #777777; }

.hr--mid {
  background-color: #9B9B9B; }

.hr--light {
  background-color: #D8D8D8; }

.hr--shade {
  background-color: #DEDEDE; }

.hr--success {
  background-color: #AAD091; }

.hr--warning {
  background-color: #EFBC68; }

.hr--error {
  background-color: #D17580; }

.hr--info {
  background-color: #9CC9DF; }

.hr--facebook {
  background-color: #3b5998; }

.hr--twitter {
  background-color: #1da1f2; }

.hr--linkedin {
  background-color: #0077b5; }

.hr--centered {
  margin-left: auto;
  margin-right: auto; }

/*
 * Icon:
 * Utility classes to make working with SVG icons a little easier
 */
/*
 * Icon Config
 *
 * 1. Sizes
 * 2. Colours
 *
 */
.icon {
  width: 1em;
  height: 1em;
  font-size: 1.5rem;
  display: inline-block;
  vertical-align: middle; }

/* Colors */
.icon--base {
  fill: #4A4A4A; }

.icon--canvas {
  fill: #FAFAFA; }

.icon--white {
  fill: #FFFFFF; }

.icon--alpha {
  fill: #EA4D52; }

.icon--beta {
  fill: #638DB4; }

.icon--gamma {
  fill: #3E5168; }

.icon--dark {
  fill: #777777; }

.icon--mid {
  fill: #9B9B9B; }

.icon--light {
  fill: #D8D8D8; }

.icon--shade {
  fill: #DEDEDE; }

.icon--success {
  fill: #AAD091; }

.icon--warning {
  fill: #EFBC68; }

.icon--error {
  fill: #D17580; }

.icon--info {
  fill: #9CC9DF; }

.icon--facebook {
  fill: #3b5998; }

.icon--twitter {
  fill: #1da1f2; }

.icon--linkedin {
  fill: #0077b5; }

/* Colors */
.icon--small {
  font-size: 1rem; }

.icon--normal {
  font-size: 1.5rem; }

.icon--large {
  font-size: 2.25rem; }

/*
 * Overlay
 * Overlays are for focusing content over the top of the main flow of content, whilst also locking off
 * interactions with the main flow until the focused content is addressed.
 */
.overlay {
  display: flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 2rem 0; }

.overlay__backdrop {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(74, 74, 74, 0.25); }

.overlay__backdrop--transparent {
  background-color: none; }

.overlay__backdrop--dark {
  background-color: rgba(119, 119, 119, 0.55); }

.overlay__backdrop--white {
  background-color: rgba(255, 255, 255, 0.75); }

.overlay__backdrop--canvas {
  background-color: rgba(250, 250, 250, 0.75); }

/*
 * Pinned Actions:
 * A Pinned Action is a common pattern used to pin key elements or actions to the viewport. This element may sometimes be ‘sticky' i.e. a buy now CTA may only appear within a Pinned Action once the user has already scrolled past that CTA in it’s normal position.
 * Examples of content usually contained within a Pinned Action;
 *  - Set of Tabs
 *  - Single Button
 *  - Progress Bar
 *
 */
.pinned {
  position: fixed; }

.pinned__panel {
  background-color: rgba(255, 255, 255, 0.9);
  border: 1px solid #D8D8D8;
  padding: 1rem; }

/* Modifiers */
@supports (position: sticky) {
  .pinned--sticky {
    position: -webkit-sticky;
    position: sticky;
    top: 0; } }

.pinned--top {
  top: 0;
  left: 50%;
  transform: translateX(-50%); }

.pinned--top-right {
  top: 0;
  right: 0; }

.pinned--bottom-right {
  top: 100%;
  right: 0;
  transform: translateY(-100%); }

.pinned--bottom {
  top: 100%;
  left: 0;
  transform: translateY(-100%); }
  .pinned--bottom.pinned--full-width .pinned__panel {
    border-left: none;
    border-right: none;
    border-bottom: none; }

.pinned--bottom-left {
  bottom: 0;
  left: 0; }

.pinned--top-left {
  top: 0;
  left: 0; }

.pinned--full-width {
  width: 100%; }

/*
 * Responsive Embed:
 * A container to responsively embed media like videos and images
 *
 */
.responsive-embed {
  width: 100%;
  height: 0;
  position: relative;
  padding-bottom: 56.25%; }
  .responsive-embed > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }

/*
 * Tag:
 * 
 * A tag can be used to highlight metadata such as a category or status.
 *
 */
/*
 * Tag Config
 *
 * 1. Colors
 * 2. Border Radius
 * 3. Sizes
 * 4. Label Weight
 * 5. Label Leading
 *
 */
.tag {
  display: inline-block;
  border-radius: 1.2rem;
  padding: 0.25rem 1rem;
  background-color: #4A4A4A;
  color: #FFFFFF; }

/* Colors */
.tag--base {
  color: #4A4A4A;
  background-color: rgba(74, 74, 74, 0.15); }

.tag--canvas {
  color: #FAFAFA;
  background-color: rgba(250, 250, 250, 0.15); }

.tag--white {
  color: #FFFFFF;
  background-color: rgba(255, 255, 255, 0.15); }

.tag--alpha {
  color: #EA4D52;
  background-color: rgba(234, 77, 82, 0.15); }

.tag--beta {
  color: #638DB4;
  background-color: rgba(99, 141, 180, 0.15); }

.tag--gamma {
  color: #3E5168;
  background-color: rgba(62, 81, 104, 0.15); }

.tag--dark {
  color: #777777;
  background-color: rgba(119, 119, 119, 0.15); }

.tag--mid {
  color: #9B9B9B;
  background-color: rgba(155, 155, 155, 0.15); }

.tag--light {
  color: #D8D8D8;
  background-color: rgba(216, 216, 216, 0.15); }

.tag--shade {
  color: #DEDEDE;
  background-color: rgba(222, 222, 222, 0.15); }

.tag--success {
  color: #AAD091;
  background-color: rgba(170, 208, 145, 0.15); }

.tag--warning {
  color: #EFBC68;
  background-color: rgba(239, 188, 104, 0.15); }

.tag--error {
  color: #D17580;
  background-color: rgba(209, 117, 128, 0.15); }

.tag--info {
  color: #9CC9DF;
  background-color: rgba(156, 201, 223, 0.15); }

.tag--facebook {
  color: #3b5998;
  background-color: rgba(59, 89, 152, 0.15); }

.tag--twitter {
  color: #1da1f2;
  background-color: rgba(29, 161, 242, 0.15); }

.tag--linkedin {
  color: #0077b5;
  background-color: rgba(0, 119, 181, 0.15); }

/*
 * Tooltip:
 *
 * Tooltips are for displaying small pieces of contextual information, usually when hovering
 * the parent element.
 */
/*
 * Tooltip Config
 *
 * 1. Colors
 * 2. Font Size
 * 3. Border Radius
 * 4. Sizes
 * 5. Margin (distance from parent)
 * 6. Tail Size
 * 7. Enable Default Transitions
 *
 */
.tooltip {
  position: absolute;
  margin: 0;
  padding: 0.33rem 0.66rem;
  background-color: #4A4A4A;
  color: #FFFFFF;
  border-radius: 1.2rem;
  pointer-events: none;
  font-size: 0.8rem;
  white-space: nowrap;
  line-height: 1; }
  .tooltip:before {
    content: '';
    position: absolute; }

/* Directions */
.tooltip--up, .tooltip--down {
  left: 50%;
  transform: translateX(-50%); }
  .tooltip--up:before, .tooltip--down:before {
    left: 50%;
    transform: translateX(-50%); }

.tooltip--left, .tooltip--right {
  top: 50%;
  transform: translateY(-50%); }
  .tooltip--left:before, .tooltip--right:before {
    top: 50%;
    transform: translateY(-50%); }

.tooltip--up {
  bottom: calc(100% + 0.25rem); }
  .tooltip--up:before {
    border-style: solid;
    height: 0;
    width: 0;
    border-color: #4A4A4A transparent transparent;
    border-width: 6px 5px 0;
    top: 100%; }

.tooltip--right {
  left: calc(100% + 0.25rem); }
  .tooltip--right:before {
    border-style: solid;
    height: 0;
    width: 0;
    border-color: transparent #4A4A4A transparent transparent;
    border-width: 5px 6px 5px 0;
    right: calc(100% - 1px); }

.tooltip--down {
  top: calc(100% + 0.25rem); }
  .tooltip--down:before {
    border-style: solid;
    height: 0;
    width: 0;
    border-color: transparent transparent #4A4A4A;
    border-width: 0 5px 6px;
    bottom: 100%; }

.tooltip--left {
  right: calc(100% + 0.25rem); }
  .tooltip--left:before {
    border-style: solid;
    height: 0;
    width: 0;
    border-color: transparent transparent transparent #4A4A4A;
    border-width: 5px 0 5px 6px;
    left: calc(100% + 1px); }

/* Parent Helper Class */
._has-tooltip {
  position: relative; }
  ._has-tooltip .tooltip {
    opacity: 0; }
  ._has-tooltip:hover .tooltip {
    opacity: 1; }

/*
 * 5. Components
 * Components are fully-styled chunks of UI, usually comprised of a collection of Blocks.
 */
/*
 * Alert
 * Alert boxes are for drawing attention to important information. 
 */
/*
 * Alert Config
 *
 * 1. Colors
 * 2. Borders
 * 3. Sizes
 * 4. Shadows
 *
 */
.alert {
  position: relative;
  background-color: #FFFFFF;
  border-radius: 0.5rem;
  padding: 1rem 1rem 1rem calc(1rem + 4px);
  box-shadow: 0 30px 30px 0 rgba(74, 74, 74, 0.125);
  fill: #4A4A4A; }
  .alert:before {
    content: '';
    width: 4px;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background-color: #4A4A4A;
    border-top-left-radius: 0.5rem;
    border-bottom-left-radius: 0.5rem; }

/* Colors */
.alert--base {
  fill: #4A4A4A; }
  .alert--base:before {
    background-color: #4A4A4A; }

.alert--canvas {
  fill: #FAFAFA; }
  .alert--canvas:before {
    background-color: #FAFAFA; }

.alert--white {
  fill: #FFFFFF; }
  .alert--white:before {
    background-color: #FFFFFF; }

.alert--alpha {
  fill: #EA4D52; }
  .alert--alpha:before {
    background-color: #EA4D52; }

.alert--beta {
  fill: #638DB4; }
  .alert--beta:before {
    background-color: #638DB4; }

.alert--gamma {
  fill: #3E5168; }
  .alert--gamma:before {
    background-color: #3E5168; }

.alert--dark {
  fill: #777777; }
  .alert--dark:before {
    background-color: #777777; }

.alert--mid {
  fill: #9B9B9B; }
  .alert--mid:before {
    background-color: #9B9B9B; }

.alert--light {
  fill: #D8D8D8; }
  .alert--light:before {
    background-color: #D8D8D8; }

.alert--shade {
  fill: #DEDEDE; }
  .alert--shade:before {
    background-color: #DEDEDE; }

.alert--success {
  fill: #AAD091; }
  .alert--success:before {
    background-color: #AAD091; }

.alert--warning {
  fill: #EFBC68; }
  .alert--warning:before {
    background-color: #EFBC68; }

.alert--error {
  fill: #D17580; }
  .alert--error:before {
    background-color: #D17580; }

.alert--info {
  fill: #9CC9DF; }
  .alert--info:before {
    background-color: #9CC9DF; }

.alert--facebook {
  fill: #3b5998; }
  .alert--facebook:before {
    background-color: #3b5998; }

.alert--twitter {
  fill: #1da1f2; }
  .alert--twitter:before {
    background-color: #1da1f2; }

.alert--linkedin {
  fill: #0077b5; }
  .alert--linkedin:before {
    background-color: #0077b5; }

/*
 * Dialog
 * 
 * A dialog is for displaying and prioritising contextual content or functionality, over the top of
 * the main flow of content
 */
.dialog {
  display: flex;
  flex-direction: column;
  position: fixed;
  top: 50%;
  left: 50%;
  max-width: 95vw;
  max-height: 95vh;
  transform: translateX(-50%) translateY(-50%);
  background-color: #FFFFFF; }

.dialog__close {
  position: absolute;
  top: 1rem;
  right: 1rem;
  cursor: pointer; }

.dialog__header {
  padding: 1rem 1rem 0;
  justify-self: flex-start; }

.dialog__body {
  padding: 1rem;
  justify-self: stretch;
  max-height: 70vh;
  overflow-y: auto; }

.dialog__footer {
  padding: 0 1rem 1rem;
  justify-self: flex-end; }

._a_dialog-enter {
  transform: translateY(-60%) translateX(-50%);
  opacity: 0; }
  ._a_dialog-enter._a_dialog-enter-active {
    transform: translateY(-50%) translateX(-50%);
    opacity: 1;
    transition: all 750ms cubic-bezier(0.23, 1, 0.32, 1); }

._a_dialog-exit {
  transform: translateY(-50%) translateX(-50%);
  opacity: 1; }
  ._a_dialog-exit._a_dialog-exit-active {
    transform: translateY(-55%) translateX(-50%);
    opacity: 0;
    transition: all 300ms cubic-bezier(0.6, 0.04, 0.98, 0.335); }

/*
 * Drilldown
 * Drilldowns are a way of navigating horizontally through multiple panes of content i.e. a navigation with 
 * nested sub-sections.
 */
.drilldown {
  position: relative;
  overflow: hidden; }

.drilldown__pane {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  background-color: #FFFFFF;
  box-shadow: 0 30px 0 rgba(0, 0, 0, 0.25), 0 0 5px 0 rgba(0, 0, 0, 0.125); }

._a_drilldown--back-enter, ._a_drilldown--back-appear {
  transform: translateX(-5%);
  z-index: 90;
  position: absolute; }
  ._a_drilldown--back-enter._a_drilldown--back-enter-active, ._a_drilldown--back-enter._a_drilldown--back-appear-active, ._a_drilldown--back-appear._a_drilldown--back-enter-active, ._a_drilldown--back-appear._a_drilldown--back-appear-active {
    transform: translateX(0%);
    transition: all 500ms ease-out; }
  ._a_drilldown--back-enter._a_drilldown--back-enter-done, ._a_drilldown--back-enter._a_drilldown--back-appear-done, ._a_drilldown--back-appear._a_drilldown--back-enter-done, ._a_drilldown--back-appear._a_drilldown--back-appear-done {
    position: relative; }

._a_drilldown--back-exit {
  position: relative;
  transform: translateX(0%);
  z-index: 100; }
  ._a_drilldown--back-exit._a_drilldown--back-exit-active {
    transform: translateX(100%);
    transition: all 500ms cubic-bezier(0.6, 0.04, 0.98, 0.335); }
  ._a_drilldown--back-exit._a_drilldown--back-exit-done {
    position: absolute; }

._a_drilldown--next-enter, ._a_drilldown--next-appear {
  transform: translateX(100%);
  z-index: 100;
  position: absolute; }
  ._a_drilldown--next-enter._a_drilldown--next-enter-active, ._a_drilldown--next-enter._a_drilldown--next-appear-active, ._a_drilldown--next-appear._a_drilldown--next-enter-active, ._a_drilldown--next-appear._a_drilldown--next-appear-active {
    transform: translateX(0%);
    transition: all 750ms cubic-bezier(0.23, 1, 0.32, 1); }
  ._a_drilldown--next-enter._a_drilldown--next-enter-done, ._a_drilldown--next-enter._a_drilldown--next-appear-done, ._a_drilldown--next-appear._a_drilldown--next-enter-done, ._a_drilldown--next-appear._a_drilldown--next-appear-done {
    position: relative; }

._a_drilldown--next-exit {
  position: relative;
  transform: translateX(0%);
  z-index: 90; }
  ._a_drilldown--next-exit._a_drilldown--next-exit-active {
    transform: translateX(-5%);
    transition: all 500ms ease-out; }
  ._a_drilldown--next-exit._a_drilldown--back-exit-done {
    position: absolute; }

/*
 * Flyout
 * Use a flyout when you need to bring in some supplementary content which, by default, lives 'off canvas'.
 * Common use cases are for slide-in menus or notification panels. 
 */
.flyout {
  position: fixed;
  top: 0;
  right: 0;
  height: 100%;
  background-color: #FFFFFF;
  padding: 1rem;
  width: 25em;
  max-width: 95vw;
  border: none; }

.flyout__close {
  position: absolute;
  top: 1rem;
  right: 1rem;
  cursor: pointer; }

.flyout--left {
  left: 0;
  right: auto;
  border-right-color: #4A4A4A;
  border-left-color: transparent; }

._a_flyout-enter {
  transform: translateX(100%);
  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0); }
  ._a_flyout-enter._a_flyout-enter-active {
    transform: translateX(0);
    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.125);
    transition: all 750ms cubic-bezier(0.23, 1, 0.32, 1); }

._a_flyout-enter-done {
  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.125); }

._a_flyout-exit {
  transform: translateX(0);
  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.125); }
  ._a_flyout-exit._a_flyout-exit-active {
    transform: translateX(100%);
    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0);
    transition: all 300ms cubic-bezier(0.6, 0.04, 0.98, 0.335); }

/* Left-hand flyout transitions */
._a_flyout--left-enter {
  transform: translateX(-100%);
  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0); }
  ._a_flyout--left-enter._a_flyout--left-enter-active {
    transform: translateX(0);
    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.125);
    transition: all 750ms cubic-bezier(0.23, 1, 0.32, 1); }

._a_flyout--left-enter-done {
  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.125); }

._a_flyout--left-exit {
  transform: translateX(0);
  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.125); }
  ._a_flyout--left-exit._a_flyout--left-exit-active {
    transform: translateX(-100%);
    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0);
    transition: all 300ms cubic-bezier(0.6, 0.04, 0.98, 0.335); }

/*
 * Hero:
 *
 * Large page headers containing a background color or background image.
 */
/*
 * Button Config
 *
 * 1. Colors
 * 2. Border Radius
 * 3. Sizes
 * 4. Label Weight
 * 5. Label Leading
 *
 */
.hero {
  position: relative;
  padding: 6rem 0; }

/* Colors */
.hero--base {
  background-color: #4A4A4A; }

.hero--canvas {
  background-color: #FAFAFA; }

.hero--white {
  background-color: #FFFFFF; }

.hero--alpha {
  background-color: #EA4D52; }

.hero--beta {
  background-color: #638DB4; }

.hero--gamma {
  background-color: #3E5168; }

.hero--dark {
  background-color: #777777; }

.hero--mid {
  background-color: #9B9B9B; }

.hero--light {
  background-color: #D8D8D8; }

.hero--shade {
  background-color: #DEDEDE; }

.hero--success {
  background-color: #AAD091; }

.hero--warning {
  background-color: #EFBC68; }

.hero--error {
  background-color: #D17580; }

.hero--info {
  background-color: #9CC9DF; }

.hero--facebook {
  background-color: #3b5998; }

.hero--twitter {
  background-color: #1da1f2; }

.hero--linkedin {
  background-color: #0077b5; }

/* Sizes */
.hero--small {
  padding: 4rem 0; }

.hero--normal {
  padding: 6rem 0; }

.hero--normal-offet {
  padding: 9rem 0 3rem; }

.hero--fullheight {
  min-height: 100vh; }

/*
 * Read More (Has JS dependency)
 * The read more pattern adds a max-height onto a target container, along with a button to remove
 * the max-height and expand the container to it's natural height. Useful for showing only an excerpt
 * of long blocks of copy until the user requests to read in full.
 */
.read-more {
  position: relative;
  overflow: hidden; }
  .read-more._is-collapsed {
    max-height: 10em; }
    .read-more._is-collapsed:before,
    .read-more._is-collapsed .read-more__trigger {
      opacity: 1; }
  .read-more:before {
    background: linear-gradient(rgba(255, 255, 255, 0), #FFFFFF, 0);
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 10em;
    opacity: 0;
    pointer-events: none; }

.read-more__trigger {
  position: absolute;
  bottom: 1rem;
  left: 50%;
  transform: translateX(-50%);
  opacity: 0; }
  .read-more__trigger:hover {
    transform: translateX(-50%) translateY(-2px) !important; }

/*
 * Table:
 *
 * A simple out-of-the-box table style, including automatic horizontal scrolling
 * for narrow viewports.
 */
.table {
  width: 100%;
  table-layout: fixed;
  overflow: auto;
  background-color: #FFFFFF; }
  .table tr {
    border-bottom: 1px solid #DEDEDE; }
  .table th, .table td {
    padding: 1rem; }
  .table th {
    background-color: #777777; }

/*
 * Tabs
 *
 * For showing and hiding content panels based on a selected link/tab.
 */
.tabs__overflow {
  position: relative; }
  .tabs__overflow:before {
    content: '';
    width: 7.5rem;
    height: 100%;
    height: calc(100% - 2px);
    position: absolute;
    top: 0;
    right: 0;
    pointer-events: none;
    z-index: 1;
    background: linear-gradient(transparent, #FFFFFF, "to right"); }
  .tabs__overflow:after {
    content: '';
    width: 100%;
    height: 2px;
    background: #D8D8D8;
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: -1; }

.tabs__buttons {
  display: none;
  overflow-y: auto; }
  .tabs._is-active .tabs__buttons {
    display: flex; }
  .tabs__buttons + .tabs__panels {
    margin-top: 1rem; }

.tabs__button {
  appearance: none;
  -webkit-appearance: none;
  border: 0;
  background: transparent;
  color: #4A4A4A;
  padding: 1rem;
  position: relative;
  white-space: nowrap;
  cursor: pointer; }
  .tabs__button:after {
    content: '';
    width: 0%;
    height: 2px;
    background: #4A4A4A;
    position: absolute;
    bottom: 0;
    left: 50%;
    opacity: 0; }
  .tabs__button:hover:after {
    opacity: 0.5;
    left: 0;
    width: 100%; }
  .tabs__button._is-active:after {
    opacity: 1;
    left: 0;
    width: 100%; }
  .tabs__button:focus {
    outline: none; }
  .tabs__button + .tabs__button {
    margin-left: 1rem; }

.tabs__panel + .tabs__panel {
  margin-top: 1rem; }

.tabs._is-active .tabs__panel {
  display: none;
  margin-top: 0; }
  .tabs._is-active .tabs__panel._is-visible {
    display: block; }

/*
 * 6. Utilities
 * Utilities are helpful utility classes allowing for quickly modifying an existing element.
 */
/*
 * Alignment:
 *
 * Utility classes for quickly aligning content.
 */
.align-text--left {
  text-align: left; }

.align-text--center {
  text-align: center; }

.align-text--right {
  text-align: right; }

/*
 * Animation:
 *
 * Some common plug-and-play transitions for use on any element.
 */
._a_simple-transition {
  transition: 0.5s all ease-out; }

/*
 * Background:
 * Utility styles for background cover images, fixed backgrounds, etc.
 */
.background--cover {
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat; }

.background--fixed {
  background-attachment: fixed;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat; }

/*
 * Clearfix
 *
 * Utility class for clearing down pesky floats.
 */
.clearfix:after {
  clear: both;
  content: '';
  display: block; }

/*
 * Text Alignment:
 *
 * Utility classes for quickly aligning text content.
 */
.align-text--left {
  text-align: left; }

.align-text--center {
  text-align: center; }

.align-text--right {
  text-align: right; }

/*
 * Vertical Alignment:
 *
 * Utility classes for quickly aligning content.
 */
.vertical-align--middle {
  vertical-align: middle; }
  .vertical-align--middle + * {
    vertical-align: middle; }

/*
 * Add your own extensions and bespoke SCSS modules here;
 *
 * i.e. @import 'blocks/Button/button'; // Example import for project-level button classes
 * 
 */
/**
 * _shame.scss
 *
 * Need to write something hacky or smelly that you honestly intend to re-factor later? Dump it in here. But tidy up after yourself!
 * 
 */
.foundry__section {
  display: grid;
  grid-template-columns: 1fr 3fr; }

#avatar-demo .avatar {
  margin: 0 2rem 2rem 0; }

#buttons-demo .button {
  margin: 0 2rem 2rem 0; }

#cards-demo {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 2rem; }

#icons-demo .icon {
  margin: 0 2rem 2rem 0; }

#tags-demo .tag {
  margin: 0 1rem 1rem 0; }

#tooltips-demo .button {
  margin: 0 1rem 1rem 0; }

#tooltips-demo .tooltip {
  z-index: 1; }

#alerts-demo {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 2rem; }

body {
  padding-bottom: 6rem; }
